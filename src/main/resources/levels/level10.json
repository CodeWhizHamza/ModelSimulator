
{
  "name": "2 to 4 Decoder",
  "inputs": {
    "A": [0, 0, 1, 1],
    "B": [0, 1, 0, 1]
  },
  "outputs": {
    "0": [1, 0, 0, 0],
    "1": [0, 1, 0, 0],
    "2": [0, 0, 1, 0],
    "3": [0, 0, 0, 1]
  },
  "availableGates": {
    "NOT": ["A=!B"],
    "AND": ["C=A&B"]
  },
  "maxGates": 6,
  "maxTime": 60,
  "previousScore": 0,
  "isLocked": true,
  "hint": "minterms",
  "description": "A 2 to 4 decoder is a combinational logic circuit that takes in a 2-bit input and produces a 4-bit output. The 2-bit input consists of two signals A and B, which can be either 0 or 1. The output consists of four signals Y0, Y1, Y2, and Y3, where only one of the four output signals is active at any given time, depending on the input.\n\nThe circuit can be implemented using basic logic gates, such as AND and NOT gates. To construct the circuit, two NOT gates and two AND gates are used. The input signals A and B are first fed into the NOT gates to invert their values. The output of the NOT gate for input A is then connected to one input of the first AND gate, while the output of the NOT gate for input B is connected to the other input of the same AND gate.\n\nSimilarly, the output of the NOT gate for input A is connected to one input of the second AND gate, while the input B is connected to the other input of the same AND gate. The output of the first AND gate is connected to the Y0 output, while the output of the second AND gate is connected to the Y1 output.\n\nThe Y2 output is the complement of Y0, and the Y3 output is the complement of Y1. This can be achieved using additional NOT gates connected to the Y0 and Y1 outputs.\n\nIn summary, the 2 to 4 decoder takes in a 2-bit input and produces a 4-bit output. The output signals represent the decimal equivalent of the binary input. For example, if the input is 10, then the Y2 output will be active and the Y0, Y1, and Y3 outputs will be inactive."
}
